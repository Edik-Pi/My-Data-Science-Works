#!/usr/bin/env python
# coding: utf-8

# In[2]:


#Задание 1
""""Дана переменная, в которой хранится слово из латинских букв.
Напишите код, который выводит на экран:
· среднюю букву, если число букв в слове нечетное;""""
print("Plese , write ani word")
word =input()
print("You writed :", word)

if len(word)%2 != 0:
    print(word[len(word)//2])
else:
    print(word[len(word) // 2-1:len(word) // 2 + 1])
    #две средних буквы, если число букв четное.


# In[15]:


#Задание 2
""""Напишите программу, которая последовательно запрашивает у пользователя числа
(по одному за раз) и после первого нуля выводит сумму всех ранее введенных
чисел."""
#number
n = 0
#sum
sum_n = 0
while True:
    print("enter any number")
    a = int(input())
    # if 0
    if a == 0:
            break
    else:
        sum_n += a
    print("Sum :", sum_n)


# In[3]:


#Задание 3
""""Мы делаем dating-сервиса, и у нас есть список парней и девушек.
Выдвигаем гипотезу: лучшие рекомендации мы получим, если просто отсортируем
имена по алфавиту и познакомим людей с одинаковыми индексами после
сортировки! Но мы не будем никого знакомить, если кто-то может остаться без
пары:"""
#boys = ['Edik','John','Arthur','Dima','Richard','Anton']
boys = ['Edik','John','Arthur','Dima','Richard']
girls = ['Eva','Liza','Kira','Anna','Rosa']

if len(boys) != len(girls):
    print("Предупреждение ! кто-то может остаться без пары")
    
else:
    boys.sort()
    girls.sort()
    
    new_couples = dict(zip(boys,girls))
    print("Идеальные пары")
    for boy, girl in new_couples.items():
        print(f"{boy} и { girl}")
    
    


# In[9]:


#Задание 5
""""Дана переменная, в которой хранится словарь, содержащий гео-метки для каждого
пользователя (пример структуры данных приведен ниже). Вам необходимо
написать программу, которая выведет на экран множество уникальных гео-меток
всех пользователей."""

countries_temperature = [
    ['Thailand',[75.2, 77, 78.8, 73.4, 68, 75.2, 77]],
    ['Germany',[57.2, 55.4, 59, 59.2, 63, 53.6, 55]],
    ['Russia',[35.6, 37.4, 39.2, 41, 42.8, 39.2, 35.6]],
    ['Poland',[50, 50, 53.6, 57.2, 55.4, 54.3, 51.7]]]

celsius_temperature = list(map(lambda x:[x[0], round((sum(x[1])/len(x[1]) - 32) * 0.56, 2)], countries_temperature))

print(celsius_temperature)


# In[13]:


#Задание 6
""""Дана переменная, в которой хранится список поисковых запросов пользователя
(пример структуры данных приведен ниже). Вам необходимо написать программу,
которая выведет на экран распределение количества слов в запросах в требуемом виде"""

queries = [
    'Смотреть сериалы онлайн',
    'Новости спорта',
    'Афиша кино',
    'Курс доллара',
    'Сериалы этим летом',
    'Курс по питону',
    'сериалы про спорт',
]

perc = 100/ len(queries)
print('Поисковых запросов из одного -слово', perc * len(list(filter(lambda x: len(x.split()) == 1, queries))))
print('Поисковых запросов из двух -слово', perc * len(list(filter(lambda x: len(x.split()) == 2, queries))))
print('Поисковых запросов из трех -слово', perc * len(list(filter(lambda x: len(x.split()) == 3, queries))))


# In[18]:


#Задание 7
""""Дана переменная, в которой хранится информация о затратах и доходе рекламных
кампаний по различным источникам. Необходимо дополнить исходную структуру
показателем ROI, который рассчитаем по формуле: (revenue / cost - 1) * 100"""

results = {
    'Vk': {'revenue': 103, 'cost': 98},
    'Yandex': {'revenue': 179, 'cost': 153},
    'Facebook': {'revenue': 103, 'cost': 110},
    'Adword': {'revenue': 135, 'cost': 34},
    'twitter': {'revenue': 11, 'cost': 24},
}

for key, value in results.items():
    #print('revenue', value['revenue'])
    #print('cost', value['cost'])
    value['RDI'] = round(((value['revenue'] / value['cost']) - 1)*180, 2)
    #print('RDI',value['RDI']) 
    
    print(key, value)


# In[19]:


#Задание 8
""""Дана переменная, в которой хранится статистика рекламных каналов по объемам
продаж (пример структуры данных приведен ниже). Напишите программу, которая
возвращает название канала с максимальным объемом продаж."""

status={'Facebook': 55,'Yandex':120,'VK':115,'Google':99,'Email':42,'OK':98}
max_val = max(status.items())#Вернет ключ значение в виде кортежа('Yandex',120)

print(max_val[0]) #вернет только Yandex


# In[ ]:




